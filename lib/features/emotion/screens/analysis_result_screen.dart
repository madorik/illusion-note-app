import 'package:flutter/material.dart';
import 'package:go_router/go_router.dart';
import 'package:google_fonts/google_fonts.dart';

class AnalysisResultScreen extends StatelessWidget {
  final String emotionText;

  const AnalysisResultScreen({
    super.key,
    required this.emotionText,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xFFF7FAFC),
      appBar: AppBar(
        title: Text(
          'Î∂ÑÏÑù Í≤∞Í≥º',
          style: GoogleFonts.nunito(
            fontSize: 20,
            fontWeight: FontWeight.bold,
          ),
        ),
        leading: IconButton(
          icon: const Icon(Icons.close),
          onPressed: () => context.go('/home'),
        ),
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // Î∂ÑÏÑù Í≤∞Í≥º ÏöîÏïΩ
            _buildAnalysisSummary(),
            const SizedBox(height: 24),

            // Í∞êÏ†ï ÏÉÅÏÑ∏ Î∂ÑÏÑù
            _buildDetailedAnalysis(),
            const SizedBox(height: 24),

            // Ï∂îÏ≤ú ÏÇ¨Ìï≠
            _buildRecommendations(),
            const SizedBox(height: 24),

            // Ïï°ÏÖò Î≤ÑÌäºÎì§
            _buildActionButtons(context),
          ],
        ),
      ),
    );
  }

  Widget _buildAnalysisSummary() {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(24),
      decoration: BoxDecoration(
        gradient: const LinearGradient(
          colors: [Color(0xFF6B73FF), Color(0xFF9F7AEA)],
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
        ),
        borderRadius: BorderRadius.circular(16),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              Icon(
                Icons.psychology,
                color: Colors.white,
                size: 28,
              ),
              SizedBox(width: 12),
              Text(
                'Í∞êÏ†ï Î∂ÑÏÑù ÏôÑÎ£å',
                style: GoogleFonts.nunito(
                  fontSize: 20,
                  fontWeight: FontWeight.bold,
                  color: Colors.white,
                ),
              ),
            ],
          ),
          const SizedBox(height: 16),
          
          // Ï£ºÏöî Í∞êÏ†ï
          Container(
            padding: const EdgeInsets.all(16),
            decoration: BoxDecoration(
              color: Colors.white.withOpacity(0.2),
              borderRadius: BorderRadius.circular(12),
            ),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  'Í∞êÏßÄÎêú Ï£ºÏöî Í∞êÏ†ï',
                  style: GoogleFonts.nunito(
                    fontSize: 14,
                    color: Colors.white70,
                  ),
                ),
                const SizedBox(height: 8),
                Row(
                  children: [
                    const Text(
                      'üòä',
                      style: TextStyle(fontSize: 32),
                    ),
                    const SizedBox(width: 12),
                    Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        const Text(
                          'Í∏çÏ†ïÏ†ÅÏù∏ Í∞êÏ†ï',
                          style: TextStyle(
                            fontSize: 18,
                            fontWeight: FontWeight.bold,
                            color: Colors.white,
                          ),
                        ),
                        Container(
                          padding: const EdgeInsets.symmetric(
                            horizontal: 8,
                            vertical: 4,
                          ),
                          decoration: BoxDecoration(
                            color: Colors.white.withOpacity(0.3),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          child: const Text(
                            'Ïã†Î¢∞ÎèÑ: 85%',
                            style: TextStyle(
                              fontSize: 12,
                              color: Colors.white,
                            ),
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildDetailedAnalysis() {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(20),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(16),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.05),
            blurRadius: 10,
            offset: const Offset(0, 2),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              Icon(
                Icons.analytics,
                color: Color(0xFF6B73FF),
                size: 24,
              ),
              SizedBox(width: 8),
              Text(
                'ÏÉÅÏÑ∏ Î∂ÑÏÑù',
                style: GoogleFonts.nunito(
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                  color: Color(0xFF2D3748),
                ),
              ),
            ],
          ),
          const SizedBox(height: 20),
          
          // Í∞êÏ†ï Íµ¨ÏÑ± ÏöîÏÜå
          const Text(
            'Í∞êÏ†ï Íµ¨ÏÑ± ÏöîÏÜå',
            style: TextStyle(
              fontSize: 16,
              fontWeight: FontWeight.w600,
              color: Color(0xFF2D3748),
            ),
          ),
          const SizedBox(height: 12),
          
          _buildEmotionComponent('Í∏∞ÏÅ®', 0.7, const Color(0xFF38A169)),
          const SizedBox(height: 8),
          _buildEmotionComponent('ÎßåÏ°±', 0.6, const Color(0xFF38B2AC)),
          const SizedBox(height: 8),
          _buildEmotionComponent('ÌèâÏò®', 0.4, const Color(0xFF4299E1)),
          const SizedBox(height: 8),
          _buildEmotionComponent('Î∂àÏïà', 0.2, const Color(0xFF9F7AEA)),
          
          const SizedBox(height: 20),
          
          // ÌÇ§ÏõåÎìú
          const Text(
            'ÌïµÏã¨ ÌÇ§ÏõåÎìú',
            style: TextStyle(
              fontSize: 16,
              fontWeight: FontWeight.w600,
              color: Color(0xFF2D3748),
            ),
          ),
          const SizedBox(height: 12),
          
          Wrap(
            spacing: 8,
            runSpacing: 8,
            children: [
              _buildKeywordChip('ÏÑ±Ï∑®Í∞ê'),
              _buildKeywordChip('ÎßåÏ°±'),
              _buildKeywordChip('Í∞êÏÇ¨'),
              _buildKeywordChip('Ìù¨Îßù'),
              _buildKeywordChip('ÏûêÏã†Í∞ê'),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildEmotionComponent(String label, double value, Color color) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            Text(
              label,
              style: GoogleFonts.nunito(
                fontSize: 14,
                color: Color(0xFF4A5568),
              ),
            ),
            Text(
              '${(value * 100).toInt()}%',
              style: TextStyle(
                fontSize: 14,
                fontWeight: FontWeight.w600,
                color: color,
              ),
            ),
          ],
        ),
        const SizedBox(height: 4),
        LinearProgressIndicator(
          value: value,
          backgroundColor: const Color(0xFFE2E8F0),
          valueColor: AlwaysStoppedAnimation<Color>(color),
        ),
      ],
    );
  }

  Widget _buildKeywordChip(String keyword) {
    return Container(
      padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),
      decoration: BoxDecoration(
        color: const Color(0xFF6B73FF).withOpacity(0.1),
        borderRadius: BorderRadius.circular(16),
        border: Border.all(
          color: const Color(0xFF6B73FF).withOpacity(0.3),
        ),
      ),
      child: Text(
        keyword,
        style: GoogleFonts.nunito(
          fontSize: 12,
          fontWeight: FontWeight.w500,
          color: Color(0xFF6B73FF),
        ),
      ),
    );
  }

  Widget _buildRecommendations() {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(20),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(16),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.05),
            blurRadius: 10,
            offset: const Offset(0, 2),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              Icon(
                Icons.lightbulb,
                color: Color(0xFFD69E2E),
                size: 24,
              ),
              SizedBox(width: 8),
              Text(
                'Ï∂îÏ≤ú ÏÇ¨Ìï≠',
                style: GoogleFonts.nunito(
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                  color: Color(0xFF2D3748),
                ),
              ),
            ],
          ),
          const SizedBox(height: 16),
          
          _buildRecommendationItem(
            'üßò‚Äç‚ôÄÔ∏è',
            'ÎßàÏùåÏ±ôÍπÄ Î™ÖÏÉÅ',
            '5Î∂ÑÍ∞ÑÏùò ÍπäÏùÄ Ìò∏Ìù°Í≥º Î™ÖÏÉÅÏúºÎ°ú ÌòÑÏû¨Ïùò Í∏çÏ†ïÏ†ÅÏù∏ Í∞êÏ†ïÏùÑ ÎçîÏö± ÍπäÏù¥ ÎäêÍª¥Î≥¥ÏÑ∏Ïöî.',
          ),
          const SizedBox(height: 16),
          
          _buildRecommendationItem(
            'üìù',
            'Í∞êÏÇ¨ ÏùºÍ∏∞',
            'Ïò§Îäò Í∞êÏÇ¨ÌñàÎçò 3Í∞ÄÏßÄÎ•º Ï†ÅÏñ¥Î≥¥ÏÑ∏Ïöî. Í∏çÏ†ïÏ†ÅÏù∏ Í∞êÏ†ïÏùÑ ÏßÄÏÜçÏãúÌÇ§ÎäîÎç∞ ÎèÑÏõÄÏù¥ Îê©ÎãàÎã§.',
          ),
          const SizedBox(height: 16),
          
          _buildRecommendationItem(
            'üéµ',
            'Í∏∞Î∂Ñ Ï¢ãÏùÄ ÏùåÏïÖ',
            'ÌòÑÏû¨Ïùò Ï¢ãÏùÄ Í∏∞Î∂ÑÏóê Ïñ¥Ïö∏Î¶¨Îäî ÏùåÏïÖÏùÑ Îì§ÏúºÎ©∞ Ïù¥ ÏàúÍ∞ÑÏùÑ ÎßåÎÅΩÌï¥Î≥¥ÏÑ∏Ïöî.',
          ),
        ],
      ),
    );
  }

  Widget _buildRecommendationItem(String emoji, String title, String description) {
    return Row(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          emoji,
          style: const TextStyle(fontSize: 24),
        ),
        const SizedBox(width: 12),
        Expanded(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                title,
                style: GoogleFonts.nunito(
                  fontSize: 16,
                  fontWeight: FontWeight.w600,
                  color: Color(0xFF2D3748),
                ),
              ),
              const SizedBox(height: 4),
              Text(
                description,
                style: GoogleFonts.nunito(
                  fontSize: 14,
                  color: Color(0xFF4A5568),
                ),
              ),
            ],
          ),
        ),
      ],
    );
  }

  Widget _buildActionButtons(BuildContext context) {
    return Column(
      children: [
        // Í∏∞Î°ù Ï†ÄÏû• Î≤ÑÌäº
        SizedBox(
          width: double.infinity,
          height: 56,
          child: ElevatedButton.icon(
            onPressed: () {
              // TODO: Î∂ÑÏÑù Í≤∞Í≥º Ï†ÄÏû• Î°úÏßÅ
              ScaffoldMessenger.of(context).showSnackBar(
                const SnackBar(
                  content: Text(
                    'Î∂ÑÏÑù Í≤∞Í≥ºÍ∞Ä Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§!',
                  ),
                  backgroundColor: Color(0xFF38A169),
                ),
              );
              context.go('/home');
            },
            icon: const Icon(Icons.save),
            label: const Text(
              'Î∂ÑÏÑù Í≤∞Í≥º Ï†ÄÏû•ÌïòÍ∏∞',
              style: TextStyle(
                fontSize: 16,
                fontWeight: FontWeight.w600,
              ),
            ),
            style: ElevatedButton.styleFrom(
              backgroundColor: const Color(0xFF6B73FF),
              foregroundColor: Colors.white,
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(12),
              ),
            ),
          ),
        ),
        const SizedBox(height: 12),
        
        // Í≥µÏú† Î≤ÑÌäº
        SizedBox(
          width: double.infinity,
          height: 56,
          child: OutlinedButton.icon(
            onPressed: () {
              // TODO: Í≥µÏú† Í∏∞Îä• Íµ¨ÌòÑ
              ScaffoldMessenger.of(context).showSnackBar(
                const SnackBar(
                  content: Text(
                    'Í≥µÏú† Í∏∞Îä•ÏùÄ Í≥ß Ï∂úÏãúÎê† ÏòàÏ†ïÏûÖÎãàÎã§',
                  ),
                ),
              );
            },
            icon: const Icon(Icons.share),
            label: const Text(
              'Í≤∞Í≥º Í≥µÏú†ÌïòÍ∏∞',
              style: TextStyle(
                fontSize: 16,
                fontWeight: FontWeight.w600,
              ),
            ),
            style: OutlinedButton.styleFrom(
              foregroundColor: const Color(0xFF6B73FF),
              side: const BorderSide(color: Color(0xFF6B73FF)),
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(12),
              ),
            ),
          ),
        ),
        const SizedBox(height: 12),
        
        // ÌôàÏúºÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞
        TextButton(
          onPressed: () => context.go('/home'),
          child: const Text(
            'ÌôàÏúºÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞',
            style: TextStyle(
              fontSize: 16,
              color: Color(0xFF718096),
            ),
          ),
        ),
      ],
    );
  }
} 